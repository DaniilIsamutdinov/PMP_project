import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

int score = 0;
String ans = '';
List<bool> butt = List.filled(30, true);
//String text = '';


class QuestionsS extends StatefulWidget {
  const QuestionsS({super.key});

  @override
  State<QuestionsS> createState() => _QuestionsSState();
}

class _QuestionsSState extends State<QuestionsS> {
  final TextEditingController _controller = TextEditingController();
  @override

  void initState() {
    super.initState();
    print("initstate");
    for(int i=0; i < 30; i++){
      butt[i] = true;
    }
  }
  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
  @override
  Widget build(BuildContext context) {
    print("build");
    return Scaffold(
      appBar: PreferredSize(
          preferredSize: Size.fromHeight(30.0),
          child: AppBar(
            title: Text(
              "Ваші бали: $score",
            ),
            centerTitle: true,
            // backgroundColor: const Color(0x11000000),
            flexibleSpace: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                    begin: Alignment.topCenter,
                    end: Alignment.bottomCenter,
                    colors: <Color>[Color(0xff7ac972), Color(0xff9ad594)]),
              ),
            ),
            leading: IconButton(
                icon: Icon(Icons.house, color: Colors.black),
                onPressed: () => setState(
                      () {
                        SystemChrome.setPreferredOrientations(
                            [DeviceOrientation.portraitUp]);
                        Navigator.of(context).pop();
                      },
                    )),
          )),
      body: Center(
        child: Container(
          margin: EdgeInsets.all(10),
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Container(
                // color: Color(0x33000000),
                width: 120,
                child: GridView.builder(
                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 1, mainAxisExtent: 50, mainAxisSpacing: 3),
                  itemBuilder: (context, index) => Container(
                    margin: EdgeInsets.all(2),
                    alignment: Alignment.center,
                    decoration: BoxDecoration(
                      color: Colors.lightBlueAccent,
                      borderRadius: BorderRadius.circular(3.0),
                    ),
                    child: Center(child: Text('Тема: ${index + 1}')),
                  ),
                  itemCount: 6,
                ),
              ),
              const SizedBox(width: 10,),
              Expanded(
                child: Container(
                  // color: Color(0x33ff0000),
                  child: GridView.builder(
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                        crossAxisCount: 5, mainAxisExtent: 50, mainAxisSpacing: 3),
                    itemBuilder: (context, index) => MaterialButton(

                      onPressed: () {
                        showDialog(
                            context: context,
                            builder: (context) => AlertDialog(
                              title: Text('Какой это вопрос по порядку?'),
                              content:
                              Builder(builder: (context){
                                var height = MediaQuery.of(context).size.height;
                                var width = MediaQuery.of(context).size.width;

                                return SizedBox(
                                  height: height + 100,
                                  width: width,
                                  child: TextField(
                                    controller: _controller,
                                    // onChanged: (text){},
                                    onSubmitted: (text){ans = text;},
                                    decoration: InputDecoration(hintText: '${index+1}', hintStyle:TextStyle(color: Color(0x55000000)) ),
                                  ),
                                );
                              }),
                              actions: [
                                ElevatedButton(
                                    style: ElevatedButton.styleFrom(
                                      backgroundColor: Colors.grey,
                                      foregroundColor: Colors.white,
                                    ),
                                    onPressed: (){
                                      score -= ((index % 5)+1)*100;
                                      Navigator.pop(context);
                                    },
                                    child: const Text('Пасс'),
                                ),
                                ElevatedButton(
                                  style: ElevatedButton.styleFrom(
                                    backgroundColor: Colors.green,
                                    foregroundColor: Colors.white,
                                  ),
                                  onPressed: (){
                                    print('ans:$ans - ${ans.runtimeType}; index:$index - ${index.runtimeType}; ansint:${int.parse(ans)} - ${int.parse(ans).runtimeType}');
                                    if (int.tryParse(ans) != null && int.parse(ans) == (index+1)) {
                                      print('Текст из TextField равен индексу!');
                                      score += ((index % 5)+1)*100;
                                      showDialog(context: context, builder: (context) => AlertDialog(title: Text('+${((index % 5)+1)*100}')));
                                    }
                                    else {
                                      print('Текст из TextField не равен индексу.');
                                      score -= ((index % 5)+1)*100;
                                      showDialog(context: context, builder: (context) => AlertDialog(title: Text('-${((index % 5)+1)*100}')));
                                    }
                                    setState(() {});
                                    Navigator.pop(context);
                                  },
                                  child: const Text('Ответить'),
                                )
                              ],
                            )
                        );
                      },
                      child: Container(
                        margin: EdgeInsets.all(2),
                        alignment: Alignment.center,
                        decoration: BoxDecoration(
                          // color: Colors.lightBlueAccent,
                          color: (butt[index] ? Colors.lightBlueAccent : Colors.grey),
                          borderRadius: BorderRadius.circular(3.0),
                        ),
                        child: Center(child: Text('${((index % 5)+1)*100}')),
                      ),
                    ),
                    itemCount: 30,
                  ),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}
